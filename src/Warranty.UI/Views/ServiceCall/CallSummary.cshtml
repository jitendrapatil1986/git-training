@using Warranty.Core.Configurations
@using Warranty.Core.Enumerations
@using Warranty.Core.Extensions
@using Warranty.UI.Core.Helpers
@model Warranty.Core.Features.ServiceCallSummary.ServiceCallSummaryModel

@{
    ViewBag.Title = "Service Call Summary";
}

@helper ServiceCallStatusIconHelper(DateTime? completionDate, DateTime createdDate, int daysOpenedFor, int numberOfDaysRemaining, int percentComplete)
{
    if (!Model.ServiceCallSummary.IsSpecialProject)
    {
        if (completionDate == null)
        {
            <div class="has-bottom-tooltip" title="@Format.DateForServiceCallWiget(createdDate)">
                <span class="glyphicon glyphicon-time text-muted"></span> @Format.ServiceCallDaysLeft(numberOfDaysRemaining)<br />
                <div class="progress time-remaining-progress hidden-sm hidden-xs">
                    <div class="progress-bar @Css.ServiceCallProgressBar(numberOfDaysRemaining)" role="progressbar" style="width: @percentComplete%">
                        <span class="sr-only">@percentComplete% Complete</span>
                    </div>
                </div>
            </div>
        }
        else
        {
            @Format.DaysOpenedFor(daysOpenedFor, createdDate, completionDate)
        }
    }
}


@helper EscalationHelper(bool escalated, DateTime? escalationDate, string escalationReason)
{
    <div class='label label-danger' data-bind="visible: isEscalated()">
        <span class='glyphicon glyphicon-fire'></span>
        @Format.DateMonthDayYear(escalationDate) - @escalationReason
    </div>
}
<div style="display: none;" data-bind="visible: true">
<div class="container">
    <div class="col-md-12">

        @Html.HiddenFor(model => model.CanReopenLines, new { id = "userCanReopenCallLinesAnytime", @class = "form-control" , data_bind="value: userCanAlwaysReopenCallLines"})

        <div id="undoLastCompletedLineItem" data-bind="visible: !userCanAlwaysReopenCallLines() && lineJustCompleted()" class="undo-alert">
            <div id="undoLastCompletedLineItemAlert" class="alert alert-warning alert-dismissible padding-5" role="alert">
                Line item marked as complete. <a class="cursor-pointer" data-bind="click: undoLastCompletedLine">Undo mark as complete.</a>
            </div>
        </div>
        
        <section class="margin-bottom-10">
            <h2 class="pull-left no-margin">Service Call #@Model.ServiceCallSummary.CallNumber</h2>

            @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.WarrantyServiceManager))
            {
                <div class="warranty-header-buttons no-print">
                    <div data-bind="visible: callSummaryStatusOpen()">
                        @Format.ServiceCallToggleButton("escalate", Model.ServiceCallSummary.IsEscalated, "Escalate", "De-escalate")
                        @Format.ServiceCallToggleButton("special_project", Model.ServiceCallSummary.IsSpecialProject, "Special Project", "Not Special Project")
                    </div>
                    <div data-bind="visible: callSummaryStatusComplete() && canBeReopened()">
                        <a href='#' class='btn btn-default pull-right btn-action-with-popup' data-action-with-popup='reopen' id='btn_reopen'>Reopen</a>
                    </div>
                    <div data-bind="visible: canBeCompleted()">
                        <a href='#' class='btn btn-default pull-right' data-action-with-popup='reopen' data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" id='btn_complete'>Complete</a>
                    </div>
                </div>
            }
            <div class="clearfix"></div>
        </section>
        <div id="serviceCallSummaryPage" class="panel panel-default">
            <div class="panel-heading">
                <div class="row remove-list-style">
                    <div class="col-md-3 main-info">
                        <h3 class="panel-title text-capitalize">@Format.HomeOwner(Model.ServiceCallSummary.HomeownerName, Model.ServiceCallSummary.HomeownerNumber)</h3>
                        <ul class="no-print">
                            <li class="text-capitalize">@Model.ServiceCallSummary.Address</li>
                            <li>
                                @Format.EditablePhoneNumber(PhoneNumberType.Home, Model.ServiceCallSummary.HomePhone,Url.Action("AddOrUpdatePhoneNumber","Homeowner"), Model.ServiceCallSummary.HomeownerId)
                            </li>
                            <li>
                                @Format.EditablePhoneNumber(PhoneNumberType.Mobile, Model.ServiceCallSummary.OtherPhone,Url.Action("AddOrUpdatePhoneNumber","Homeowner"),Model.ServiceCallSummary.HomeownerId)
                            </li>
                            <li>
                                @Format.EditableEmailForServiceCall(Model.ServiceCallSummary.EmailAddress, Url.Action("AddOrUpdateEmail","Homeowner"), Model.ServiceCallSummary.HomeownerId, Model.ServiceCallSummary.CallNumber)
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-3">
                        <ul class="border-bottom-1-solid">
                            <li class="clearfix"><span class="pull-left">Created By:</span><span class="pull-right">@Model.ServiceCallSummary.CreatedBy</span></li>
                            <li class="clearfix"><span class="pull-left">Created On:</span><span class="pull-right">@Format.DateMonthDayYear(Model.ServiceCallSummary.CreatedDate)</span></li>
                            <li class="clearfix">
                                <span class="pull-left">Assignee:</span>
                                    @if (Model.CanReassign)
                                    {
                                        <div class="inline-editable-dropdown pull-right text-capitalize">
                                            <a href="#" id="Employee_List" data-source="@Url.Action("GetEmployees", "ServiceCall", new { id = Model.ServiceCallSummary.ServiceCallId })" data-url="@Url.Action("InlineReassign", "ServiceCall")" data-pk="@Model.ServiceCallSummary.ServiceCallId" data-value="@Model.ServiceCallSummary.AssignedToEmployeeNumber">@Model.ServiceCallSummary.AssignedTo</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="pull-right">@Model.ServiceCallSummary.AssignedTo</span>
                                    }
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-3">
                        <ul class="border-bottom-1-solid">
                            <li class="clearfix"><span class="pull-left">Job Number:</span>
                                <span class="pull-right">@Html.ActionLink(Model.ServiceCallSummary.JobNumber, "JobSummary", "Job", new { id = Model.ServiceCallSummary.JobId }, null)&nbsp;&nbsp;<span>@Format.YearsWithinWarranty(Model.ServiceCallSummary.YearsWithinWarranty, Model.ServiceCallSummary.WarrantyStartDate)</span></span></li>
                            <li class="clearfix"><span class="pull-left">Payments:</span><span class="pull-right">&nbsp;</span></li>
                            <li class="clearfix"><span class="pull-left">Division:</span><span class="pull-right">@Model.ServiceCallSummary.DivisionName</span></li>
                            <li class="clearfix print-only"><span class="pull-left">Phone Number:</span><span class="pull-right">@Model.ServiceCallSummary.HomePhone</span></li>
                            <li class="clearfix print-only"><span class="pull-left">E-mail:</span><span class="pull-right">@Model.ServiceCallSummary.EmailAddress</span></li>
                        </ul>
                    </div>
                    <div class="col-md-3">
                            <div id="approveCommands" class="margin-bottom-10">
                                @if (Model.ServiceCallSummary.ServiceCallStatus == ServiceCallStatus.Requested && Model.CanApprove)
                                {
                                    <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" class="approve-button"><span class="glyphicon glyphicon-thumbs-up approve-todo"></span>&nbsp;Approve</a>
                                    <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" class="deny-button"><span class="glyphicon glyphicon-thumbs-down deny-todo"></span>&nbsp;Deny</a>
                                    @Html.HiddenFor(model => model.ServiceCallSummary.ServiceCallStatus, new { id = "callSummaryServiceCallStatus"})
                                }
                                else
                                {
                                    <span>Status: @Format.ServiceCallStatus(Model.ServiceCallSummary.ServiceCallStatus, "callSummaryServiceCallStatus", "text: callSummaryServiceCallStatus, value: callSummaryServiceCallStatus, css: cssforCallSummaryServiceCallStatus") </span>
                                }
                            </div>
                            @ServiceCallStatusIconHelper(Model.ServiceCallSummary.CompletionDate, Model.ServiceCallSummary.CreatedDate, Model.ServiceCallSummary.DaysOpenedFor, Model.ServiceCallSummary.NumberOfDaysRemaining, Model.ServiceCallSummary.PercentComplete)
                        </div>
                </div>
            <div class="row" >
                <div class="col-md-12 text-center">
                    <h4>
                        @EscalationHelper(Model.ServiceCallSummary.IsEscalated, Model.ServiceCallSummary.EscalationDate, Model.ServiceCallSummary.EscalationReason)
                    </h4>
                </div>
            </div>
            </div>
 
            @Html.HiddenFor(model => model.ServiceCallSummary.HomeownerVerificationSignature, new { id = "verifiedHomeownerSignature", @class = "form-control" })
            @Html.HiddenFor(model => model.ServiceCallSummary.HomeownerVerificationSignatureDate, new { id = "verifiedHomeownerSignatureDate", @class = "form-control" })

            <section data-bind="visible: verifiedHomeownerSignature() && (callSummaryStatusSigned() || callSummaryStatusComplete())">
                <div class="alert alert-success no-bottom-margin" >
                    <span data-bind="text: verifiedSignature()"></span>
                </div>
            </section>

            <section data-bind="visible: areAllLineItemsCompleted() && !callSummaryStatusComplete() && !callSummaryStatusSigned()">
                <h3 class="col-md-12">Verify Homeowner Signature</h3>
                <div id="verifyHomeownerSignature">
                    <div class="panel panel-default no-border">
                        <div class="panel-body">
                            <form class="form-inline">
                                <div class="form-group">
                                    @Html.TextBox("Signature", null, new { id = "homeownerVerificationSignature", @class = "form-control", data_bind = "value: homeownerVerificationSignature, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add Signature'}" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBox("Date", null, new { id = "homeownerVerificationSignatureDate", @class = "datepicker-input form-control", data_bind="value: homeownerVerificationSignatureDate, attr:{placeholder: 'Select Date'}" })
                                </div>
                                <button class="btn btn-primary" data-bind="click: saveVerifiedHomeownerSignature, enable: homeownerVerificationSignature().length > 0">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </section>

            <section class="line-items">
                <h3 class="col-md-12">Line Items
                    <span>
                        <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Line Item" data-toggle="collapse" data-target="#addCallLineItem" data-bind="visible: !callSummaryStatusComplete() && !callSummaryStatusSigned()"><span class="glyphicon glyphicon-plus"></span></button>
                    </span>
                </h3>
                @Html.HiddenFor(model => model.ServiceCallSummary.ServiceCallId, new { id = "callSummaryServiceCallId", @class = "form-control" })
                <div id="addCallLineItem" class="collapse">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.DropDownList("SelectProblemCode", Model.AddServiceCallLineItem.ProblemCodes, "Select problem code", new { id = "addCallLineProblemCode", @class = "form-control", data_bind = "value: problemCodeToAdd" })
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.TextArea("Description", null, new { id = "addCallLineProblemDescription", @class = "form-control", data_bind = "value: problemDescriptionToAdd, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add description'}" })
                                </div>
                            </div>
                            <br />
                            <div class="form-submit">
                                    <button class="btn btn-primary" data-bind="click: addLineItem, enable: problemDescriptionToAdd().length > 0">Add</button>
                                    <button class="btn btn-link" data-toggle="collapse" data-target="#addCallLineItem">Cancel</button>
                            </div>
                        </div>
                    </div>

                <div class="remove-list-style">
                    <div class="clearfix"></div>
                    <ul>
                        <div data-bind="foreach: allLineItems">
                            <a data-bind="attr: {'href': '@Url.Action("LineItemDetail", "ServiceCall")/' + serviceCallLineItemId}">
                                 <div id="allServiceCallLineItems" class="service-call-line edit-line-item" data-bind="attr: {'data-service-call-line-item': lineNumber()}">
                                <li class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-9">
                                                <div class="no-left-right-padding">
                                                    <div class="row">
                                                        <div class="col-md-9">
                                                            <div class="editor" data-bind="css: { editing: problemCodeEditing }"> 
                                                                <h4>
                                                                    <select id="updateCallLineProblemCode" class="edit dropdown form-control" data-bind="options: $parent.theLookups, value: problemCode, optionsText: 'problemCode', optionsValue: 'problemCode', optionsCaption: 'Select Problem Code' "></select>
                                                                    <span data-bind="text: problemCode" class="view"></span>
                                                                </h4>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="editor" data-bind="css: { editing: problemDescriptionEditing }"> 
                                                            <p class="view" data-bind="text: problemDescription"></p>
                                                            <textarea id="updateCallLineProblemDescription" class="edit small form-control" type="text" data-bind="value: problemDescription"></textarea>
                                                            <span class="text-muted view" data-bind="text: serviceCallLineItemStatusDisplayName() ? serviceCallLineItemStatusDisplayName() : '', css: lineItemStatusCSS"></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-4 col-xs-12 no-left-right-padding top-buffer bottom-buffer">
                                                        <div class="editor" data-bind="css: { editing: lineEditing }">
                                                            <div class="col-md-3 col-xs-4">
                                                                <button type="submit" class="btn btn-primary btn-sm edit" data-bind="click: saveLineItemChanges, enable: problemDescription().length > 0">Save</button>
                                                            </div>
                                                            <div class="col-md-3 col-xs-4">
                                                                <button class="btn btn-link edit" data-bind="click: cancelLineItemChanges">Cancel</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-3 margin-bottom-3 text-align-right no-right-padding no-print">
                                                <button id="btn-edit-line-item" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10" data-bind="click: editLine, visible: !lineEditing() && !isLineItemCompleted()">Edit</button>
                                                <button id="btn-complete-line-item" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10" data-bind="click: completeLine, visible: !lineEditing()&& !isLineItemCompleted()">Complete</button>
                                                @if (Model.CanReopenLines)
                                                {
                                                    <button id="btn-reopen-line-item" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10" data-bind="click: reopenLine, visible: !lineEditing() && isLineItemCompleted()">Reopen</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <div class="clearfix"></div>
                            </div>
                            </a>
                           
                        </div>
                    </ul>
                </div>
            </section>
            <section>
                <h3 class="col-md-12">Attachments
                    <span>
                        <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Attachments" data-toggle="collapse" data-target="#addAttachment"><span class="glyphicon glyphicon-plus"></span></button>
                    </span>
                </h3>
                <div id="addAttachment" class="collapse">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                @using (Html.BeginForm("UploadAttachment", "ServiceCall"))
                                {

                                    @Html.HiddenFor(x => Model.ServiceCallSummary.ServiceCallId, new { @Name = "ServiceCallId" })
                                    @Html.EditorFor(x => x.TempFiles)
                                    <select name="ServiceCallLineItemId" id="addCallAttachmentLineReferenceDropDown" class="dropdown form-control margin-bottom-10" data-bind="options: allLineItems, value: selectedLineToAttachToAttachment, optionsText: 'lineNumberWithProblemCode', optionsValue: 'serviceCallLineItemId', optionsCaption: 'Reference line item (optional)' "></select>
                                    <input type="submit" class="btn btn-primary trigger-file-uploader" value="Add" />
                                    <button class="btn btn-link" data-toggle="collapse" data-target="#addAttachment">Cancel</button>
                                }
                            </div>
                        </div>

                    </div>
                </div>
                <br />
                <em data-bind="visible: allAttachments().length < 1" class="padding-left-15 padding-top-7 pull-left">No Attachments Available</em>
                <span data-bind="visible: allAttachments().length > 0" class="padding-left-15 padding-top-7 pull-left">Show: 
                </span>
                <div class="col-md-3 margin-bottom-10">
                    <select id="filterCallAttachmentLineReferenceDropDown" class="dropdown form-control" data-bind="options: allLineItems, value: selectedLineToFilterAttachments, optionsText: 'lineNumberWithProblemCode', optionsValue: 'serviceCallLineItemId', optionsCaption: 'All', visible: allAttachments().length > 0 "></select>
                </div>
                <div class="remove-list-style attachments row">
                    <div class="clearfix"></div>
                    <br />
                    <ul data-bind="foreach: filteredAttachments">
                        <li class="attached-file">
                            @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.WarrantyServiceManager))
                            {
                                <span data-url="" data-bind="attr: { 'data-attachment-id': serviceCallAttachmentId, 'data-url':'@Url.Action("DeleteAttachment", "ServiceCall")    '}, css: 'boxclose', click: $parent.removeAttachment.bind($parent)"></span>
                            }
                            <a data-bind="css: 'download-attachment', attr:{'href': '@Url.Action("DownloadAttachment", "ServiceCall")/' + serviceCallAttachmentId}"><span class="glyphicon glyphicon-download-alt"></span></a>
                            <a href="#" data-bind="attr: { 'data-attachment-id': serviceCallAttachmentId}, editable: displayName, editableOptions: { pk: serviceCallAttachmentId, url: '@Url.Action("RenameAttachment", "ServiceCall")    '}"  class="attached-file-display-name"></a>
                            <br/>
                            <span data-bind="text: createdBy + ' on ' + moment(createdDate).format('L'), css: 'attachment-info'"></span>
                        </li>
                    </ul>
                </div>
            </section>

            <section >
                <h3 class="col-md-12">Notes
                    <span>
                        <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Note" data-toggle="collapse" data-target="#addCallNote"><span class="glyphicon glyphicon-plus"></span></button>
                    </span>
                </h3>
                <div id="addCallNote" class="collapse">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.TextArea("Description", null, new { id = "addCallNoteDescription", @class = "form-control", data_bind = "text: noteDescriptionToAdd, value: noteDescriptionToAdd, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add note'}", @rows = 3 })
                                </div>
                            </div>
                            <br/>
                            <div class="row">
                                <div class="col-md-12">
                                    <select id="addCallNoteLineReferenceDropDown" class="dropdown form-control" data-bind="options: allLineItems, value: selectedLineToAttachToNote, optionsText: 'lineNumberWithProblemCode', optionsValue: 'serviceCallLineItemId', optionsCaption: 'Reference line item (optional)' "></select>
                                </div>
                            </div>
                            <br/>
                            <div class="form-submit">
                                    <button class="btn btn-primary" data-bind="click: addCallNote, enable: noteDescriptionToAdd().length > 0">Add</button>
                                    <button class="btn btn-link" data-toggle="collapse" data-target="#addCallNote" data-bind="click: cancelCallNote">Cancel</button>
                            </div>
                        </div>
                    </div>
                <br />
                <em data-bind="visible: allCallNotes().length < 1" class="padding-left-15 padding-top-7 pull-left">No Notes Available</em>
                <span data-bind="visible: allCallNotes().length > 0" class="padding-left-15 padding-top-7 pull-left no-print">
                    Show: 
                </span>
                <div class="col-md-3 margin-bottom-10 no-print">
                    <select id="filterCallNoteLineReferenceDropDown" class="dropdown form-control" data-bind="options: allLineItems, value: selectedLineToFilterNotes, optionsText: 'lineNumberWithProblemCode', optionsValue: 'serviceCallLineItemId', optionsCaption: 'All', visible: allCallNotes().length > 0 "></select>
                </div>
                @*<div class="col-md-1">
                    <button class="btn btn-default" data-bind="click: resetCallNoteFilter">Reset Filter</button>
                </div>*@
                <div class="remove-list-style">
                    <div class="clearfix"></div>
                    <br/>
                    <ul>
                        <div data-bind="foreach: filteredCallNotes">
                            <div id="allServiceCallNotes" class="service-call-line edit-line-item">
                                <li class="row">
                                    <div class="col-md-12">
                                        <div class="no-left-right-padding">
                                            <div class="row">
                                                <div class="col-md-11 margin-bottom-5">
                                                    <strong><small><span data-bind="text: createdBy"></span></strong></small>
                                                    <small><span data-bind="text: moment(createdDate).format('L')"></span></small>
                                                </div>
                                                <div class="col-md-1">
                                                    <span data-bind="text: noteLineNumberWithProblemCode()"></span>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <p data-bind="text: note"></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </ul>
                </div>
            </section>


        </div>
    </div>
</div>
</div>
@if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.WarrantyServiceManager))
{
    @Format.ActionwithPopup("special_project", @Url.Action("ToggleSpecialProject", "ServiceCall"), Model.ServiceCallSummary.ServiceCallId)
    @Format.ActionwithPopup("escalate", @Url.Action("ToggleEscalate", "ServiceCall"), Model.ServiceCallSummary.ServiceCallId)
    <div id='reopen' class='popup-action-with-message'>
        <textarea class="form-control margin-bottom-10" rows="5" placeholder="Enter reason"></textarea>
        <a href='#' id='btn_execute_reopen' class='btn btn-primary' data-action-url='@Url.Action("Reopen", "ServiceCall")' data-service-call-id='@Model.ServiceCallSummary.ServiceCallId'>Submit</a>
        <a href='#' class='btn-link btn-cancel-popup'>Cancel</a>
    </div>
}

@section modules
{
    <script>
        define('modelData', function() {
            return {
                initialServiceLines: @Html.Raw(Model.ServiceCallLines.ToJson()),
                initialServiceNotes: @Html.Raw(Model.ServicCallNotes.ToJson()),
                initialAttachments: @Html.Raw(Model.Attachments.ToJson()),
                isSpecialProject: @Model.ServiceCallSummary.IsSpecialProject.ToJson(),
                isEscalated: @Model.ServiceCallSummary.IsEscalated.ToJson(),
                canBeReopened: @Model.ServiceCallSummary.CanBeReopened.ToJson(),
                attachmentRemovalMessage: '@WarrantyConstants.AttachmentRemovalMessage',
                }
        });

        define('dropdownData', function() {
            return {
                availableLookups: @Html.Raw(Model.AddServiceCallLineItem.ProblemCodes.Select(x => new {problemId = x.Value, problemCode = x.Text}).ToJson())
                }
        });
    </script>
    }
