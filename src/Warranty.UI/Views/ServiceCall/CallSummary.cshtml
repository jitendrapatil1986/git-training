@using Warranty.Core.Configurations
@using Warranty.Core.Enumerations
@using Warranty.Core.Extensions
@using Warranty.UI.Core.Helpers
@model Warranty.Core.Features.ServiceCallSummary.ServiceCallSummaryModel

@{
    ViewBag.Title = "Service Call Summary";
}

@helper ServiceCallStatusIconHelper(DateTime? completionDate, DateTime createdDate, int daysOpenedFor, int numberOfDaysRemaining, int percentComplete)
{
    if (completionDate == null)
    {
        <div class="has-bottom-tooltip" title="@Format.DateForServiceCallWiget(createdDate)">
            <span class="glyphicon glyphicon-time text-muted"></span> @Format.ServiceCallDaysLeft(numberOfDaysRemaining)<br />
            <div class="progress time-remaining-progress hidden-sm hidden-xs">
                <div class="progress-bar @Css.ServiceCallProgressBar(numberOfDaysRemaining)" role="progressbar" style="width: @percentComplete%">
                    <span class="sr-only">@percentComplete% Complete</span>
                </div>
            </div>
        </div>
    }
    else
    {
        @Format.DaysOpenedFor(daysOpenedFor, createdDate, completionDate)
    }
}


<div style="display: none;" data-bind="visible: true">
<div class="container"><img src="@Url.Content("~/img/DWH logo_color_233x34.png")" class="img-responsive print-only padding-left-15 margin-top-10 margin-bottom-10" />
    <div class="col-md-12">
    @Html.HiddenFor(model => model.ServiceCallSummary.ServiceCallStatus, new { id = "callSummaryServiceCallStatus"})
        <section class="margin-bottom-10">
            <h2 class="pull-left no-margin">@Model.ServiceCallSummary.ServiceCallTitle</h2>

            <div class="warranty-header-buttons no-print">
                <a href="javascript:window.print()" class="btn btn-default pull-right margin-botom-10 no-print hidden-xs hidden-sm"><span class="glyphicon glyphicon-print"></span> Print</a>
                @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.CustomerCareManager))
                {
                    <div data-bind="visible: callSummaryStatusOpen()">
                        @Format.ServiceCallToggleButton("escalate", Model.ServiceCallSummary.IsEscalated, "Escalate", "De-escalate")
                        <div data-bind="visible: !isSpecialProject()">
                            <a href='#' class='btn btn-default pull-right btn-action-with-popup' data-action-with-popup='special_project' id='btn_special_project'>Special Project</a>
                        </div>
                        <div data-bind="visible: isSpecialProject() && canUndoSpecialProject()">
                            <a href='#' class='btn btn-default pull-right btn-action-with-popup' data-action-with-popup='special_project' id='btn_undo_special_project'>Not Special Project</a>
                        </div>
                    </div>
                    <div data-bind="visible: callSummaryStatusComplete() && canBeReopened()">
                        <a href='#' class='btn btn-default pull-right btn-action-with-popup' data-action-with-popup='reopen' id='btn_reopen'>Reopen</a>
                    </div>
                }

                @if (User.IsInRole(UserRoles.WarrantyAdmin))
                {
                    <div data-bind="visible: adminCanDelete()">
                        <a href='#' data-bind="click: adminDeleteServiceCall" class='btn btn-default pull-right' id='btn_delete'>Delete</a>
                    </div>
                }
                else if (Model.ServiceCallSummary.WasCreatedToday)
                {
                    <div data-bind="visible: canBeDeleted()">
                        <a href='#' data-bind="click: deleteServiceCall" class='btn btn-default pull-right' id='btn_delete'>Delete</a>
                    </div>
                }
            </div>
            
            <div class="clearfix"></div>
        </section>
        <div id="serviceCallSummaryPage">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row remove-list-style">
                        <div class="col-md-3 main-info">
                            <h3 class="panel-title text-capitalize">@Format.HomeOwner(Model.ServiceCallSummary.HomeownerName, Model.ServiceCallSummary.HomeownerNumber)</h3>
                            <ul>
                                <li>@Model.ServiceCallSummary.CommunityName</li>
                                <li class="text-capitalize">@Model.ServiceCallSummary.Address</li>
                                <li>@Model.ServiceCallSummary.City, @Model.ServiceCallSummary.StateCode @Model.ServiceCallSummary.PostalCode</li>
                                <li class="no-print">
                                    @Format.EditablePhoneNumber(PhoneNumberType.Home, Format.PhoneNumberWithExtension(Model.ServiceCallSummary.HomePhone),Url.Action("AddOrUpdatePhoneNumber","Homeowner"), Model.ServiceCallSummary.HomeownerId)
                                </li>
                                <li class="no-print">
                                    @Format.EditableEmailForServiceCall(Model.ServiceCallSummary.EmailAddress, Url.Action("AddOrUpdateEmail","Homeowner"), Model.ServiceCallSummary.HomeownerId, Model.ServiceCallSummary.CallNumber)
                                </li>
                            </ul>
                        </div>
                        <hr class="print-only margin-top-10 margin-bottom-10"/>
                        <div class="col-md-3">
                            <ul class="border-bottom-1-solid">
                                <li class="clearfix no-print"><span class="pull-left">Created By:</span><span class="pull-right">@Model.ServiceCallSummary.CreatedBy</span></li>
                                <li class="clearfix no-print"><span class="pull-left">Created On:</span><span class="pull-right">@Format.DateMonthDayYear(Model.ServiceCallSummary.CreatedDate)</span></li>
                                <li class="clearfix">
                                    <span class="pull-left">Assignee:</span>
                                    @if (Model.CanReassign)
                                    {
                                        <div class="inline-editable-dropdown pull-right text-capitalize">
                                            <a href="#" id="Employee_List" data-source="@Url.Action("GetEmployees", "ServiceCall", new { id = Model.ServiceCallSummary.ServiceCallId })" data-url="@Url.Action("InlineReassign", "ServiceCall")" data-pk="@Model.ServiceCallSummary.ServiceCallId" data-value="@Model.ServiceCallSummary.AssignedToEmployeeNumber">@Model.ServiceCallSummary.AssignedTo</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="pull-right">@Model.ServiceCallSummary.AssignedTo</span>
                                    }
                                </li>
                            </ul>
                        </div>
                        <div class="col-md-3">
                            <ul class="border-bottom-1-solid">
                                <li class="clearfix"><span class="pull-left">Job Number:</span>
                                    <span class="pull-right">@Html.ActionLink(Model.ServiceCallSummary.JobNumber, "JobSummary", "Job", new { id = Model.ServiceCallSummary.JobId }, null)&nbsp;&nbsp;<span>@Format.YearsWithinWarranty(Model.ServiceCallSummary.YearsWithinWarranty, Model.ServiceCallSummary.WarrantyStartDate, Model.ServiceCallSummary.Stage)</span></span></li>
                                <li class="clearfix no-print"><span class="pull-left">Payments:</span><span class="pull-right">&nbsp;</span></li>
                                <li class="clearfix no-print"><span class="pull-left">Division:</span><span class="pull-right">@Model.ServiceCallSummary.DivisionName</span></li>
                                <li class="clearfix print-only"><span class="pull-left">Phone Number:</span><span class="pull-right">@Model.ServiceCallSummary.HomePhone</span></li>
                                <li class="clearfix print-only"><span class="pull-left">E-mail:</span><span class="pull-right">@Model.ServiceCallSummary.EmailAddress</span></li>
                            </ul>
                        </div>
                        <div class="col-md-3 no-print">
                            <div id="approveCommands" class="margin-bottom-10">
                            
                                @if (Model.ServiceCallSummary.ServiceCallStatus == ServiceCallStatus.Requested && Model.CanApprove)
                                {
                                    <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" data-display-status="true" class="approve-button"><span class="glyphicon glyphicon-thumbs-up approve-todo"></span>&nbsp;Approve</a>
                                    <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" data-display-status="true" class="deny-button"><span class="glyphicon glyphicon-thumbs-down deny-todo"></span>&nbsp;Deny</a>
                                }
                                else
                                {
                                    <span>Status: @Format.ServiceCallStatus(Model.ServiceCallSummary.ServiceCallStatus, "callSummaryServiceCallStatus", "text: callSummaryServiceCallStatus, value: callSummaryServiceCallStatus, css: cssforCallSummaryServiceCallStatus") </span>
                                }
                            </div>
                            
                            @if (!Model.ServiceCallSummary.IsSpecialProject)
                            {
                                @ServiceCallStatusIconHelper(Model.ServiceCallSummary.CompletionDate, Model.ServiceCallSummary.CreatedDate, Model.ServiceCallSummary.DaysOpenedFor, Model.ServiceCallSummary.NumberOfDaysRemaining, Model.ServiceCallSummary.PercentComplete)
                            }
                        </div>
                    </div>
                </div>
                @Html.Partial("_AdditionalContacts", Model.ServiceCallSummary.HomeownerId)
 
                @Html.HiddenFor(model => model.ServiceCallSummary.HomeownerVerificationSignature, new { id = "verifiedHomeownerSignature"})
                @Html.HiddenFor(model => model.ServiceCallSummary.HomeownerVerificationSignatureDate, new { id = "verifiedHomeownerSignatureDate"})
                @Html.HiddenFor(model => model.ServiceCallSummary.HomeownerVerificationType, new {id = "verifiedHomeownerType"})

                <section data-bind="visible: verifiedHomeownerSignature() && (callSummaryStatusSigned() || callSummaryStatusComplete())">
                    <div class="alert alert-success no-bottom-margin" >
                        <span data-bind="text: verifiedSignature()"></span>
                    </div>
                </section>
                <section data-bind="visible: isEscalated">
                    <div class="alert alert-danger no-bottom-margin">
                        <strong>Escalated</strong> <span data-bind="text: escalationDate()!=null ? moment(escalationDate()).format('MM/DD/YYYY') : ''"></span><span data-bind="    text: (escalationReason()) ? ' - ' + escalationReason() : ''"></span>    
                    </div>
                </section>
                <section data-bind="visible: isSpecialProject">
                    <div class="alert alert-info no-bottom-margin">
                        <strong>Special Project</strong> <span data-bind="text: specialProjectDate()!=null ? moment(specialProjectDate()).format('MM/DD/YYYY') : ''"></span><span data-bind="    text: (specialProjectReason()) ? ' - ' + specialProjectReason(): ''"></span>
                    </div>
                </section>
                
                @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.CustomerCareManager))
                {
                    <section data-bind="visible: areAllLineItemsCompletedOrNoAction() && !callSummaryStatusComplete() && !callSummaryStatusSigned()">
                        <h3 class="col-md-12">Verify Homeowner Signature</h3>
                        <div id="verifyHomeownerSignature">
                            <div class="panel panel-default no-border">
                                <div class="panel-body">
                                    <div class="row">
                                        <form>
                                            <div class="control-group col-md-3 no-right-padding" data-bind="validationElement: homeownerVerificationTypeId">
                                                <label class="control-label" for="verifyHomeownerType"></label>
                                                <select id="verifyHomeownerType" class="form-control" data-bind="options: homeownerVerificationCodes, value: homeownerVerificationTypeId, optionsText: 'displayText', optionsValue: 'value', optionsCaption: 'Select Verification Type'"></select>
                                            </div>
                                            <div class="control-group col-md-3 no-right-padding" data-bind="validationElement: homeownerVerificationSignature">
                                                <label class="control-label" for="homeownerVerificationSignature"></label>
                                                @Html.TextBox("Signature", null, new {id = "homeownerVerificationSignature", @class = "form-control", data_bind = "value: homeownerVerificationSignature, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add Signature'}"})
                                            </div>
                                            <div class="control-group col-md-2 no-right-padding" data-bind="validationElement: homeownerVerificationSignatureDate">
                                                <label class="control-label" for="homeownerVerificationSignatureDate"></label>
                                                @Html.TextBox("Date", null, new {id = "homeownerVerificationSignatureDate", @class = "datepicker-input form-control", data_bind = "value: homeownerVerificationSignatureDate, attr:{placeholder: 'Select Date'}"})
                                            </div>
                                            <br/>
                                            <div class="col-md-1">
                                                <button class="btn btn-primary" data-bind="click: verifySignatureAndCloseCall">Verify & Close Call</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                }

                <section class="line-items margin-bottom-15">
                    <h3 class="col-md-12 no-print">Line Items
                        <span>
                            <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Line Item" data-toggle="collapse" data-target="#addCallLineItem" data-bind="visible: !callSummaryStatusComplete() && !callSummaryStatusSigned()"><span class="glyphicon glyphicon-plus"></span></button>
                        </span>
                    </h3>
                    <div class="clearfix"></div>
                    @Html.HiddenFor(model => model.ServiceCallSummary.ServiceCallId, new { id = "callSummaryServiceCallId", @class = "form-control" })
                    <div id="addCallLineItem" class="collapse">
                        <div class="panel-body no-print">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="form-group" data-bind="validationElement: problemJdeCodeToAdd">
                                        <select id="addCallLineProblemCode" class="form-control" data-bind="options: theLookups, value: problemJdeCodeToAdd, optionsText: 'problemCode', optionsValue: 'problemId', optionsCaption: 'Select Problem Code'"></select>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group" data-bind="validationElement: problemDescriptionToAdd">
                                        @Html.TextArea("Description", null, new { id = "addCallLineProblemDescription", @class = "form-control", data_bind = "value: problemDescriptionToAdd, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add description'}" })
                                    </div>
                                    <div class="form-submit">
                                        <button class="btn btn-primary" data-bind="click: addLineItem">Add</button>
                                        <button class="btn btn-link" data-toggle="collapse" data-target="#addCallLineItem">Cancel</button>
                                    </div>
                                </div></div>
                            <div class="col-md-3 hidden" data-bind="css: { hidden: relatedCalls().length == 0}">
                                @Html.Label("Related Calls")
                                <div data-bind="foreach: relatedCalls">
                                    <div class="well well-sm">
                                        <strong><a data-bind="attr: {href: callSummaryUrl}"><span data-bind="text: callNumber"></span></a></strong><br />
                                        <span data-bind="text: problemDescription"></span><br />
                                        <small class="text-muted">Date Created: <span data-bind="text: moment(createdDate).format('LL')"></span></small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div data-bind="foreach: allLineItems">
                        <div data-bind="click: jumpToServiceCallLineDetailPage, css: { 'cursor-pointer': lineEditing() == false }">
                            <div id="allServiceCallLineItems" class="service-call-line edit-line-item row lineDetail" data-bind="attr: {'data-service-call-line-item': lineNumber()}">
                                <div class="col-md-9">
                                    <div class="control-group" data-bind="validationElement: problemJdeCode">
                                        <label class="control-label" for="problemJdeCode"></label>
                                        <div class="editor" data-bind="css: { editing: problemCodeEditing }">
                                            <select id="problemJdeCode" class="edit dropdown form-control" data-bind="options: $parent.theLookups, value: problemJdeCode, optionsText: 'problemCode', optionsValue: 'problemId', optionsCaption: 'Select Problem Code'"></select> 
                                            <h4>
                                                <span data-bind="text: problemCode" class="view"></span>
                                            </h4>
                                        </div>
                                    </div>
                                    <div class="control-group margin-bottom-10" data-bind="validationElement: problemDescription">
                                        <div class="editor" data-bind="css: { editing: problemDescriptionEditing }"> 
                                            <p class="view" data-bind="text: problemDescription"></p>
                                            <textarea id="problemDescription" class="edit small form-control" type="text" data-bind="value: problemDescription"></textarea>
                                            <span class="text-muted view margin-right-10" data-bind="text: serviceCallLineItemStatusDisplayName() ? serviceCallLineItemStatusDisplayName() : '', css: lineItemStatusCSS"></span>
                                            <div class="indicator-icon-with-value margin-right-10 view" data-bind="visible: numberOfAttachments > 0">
                                                <span class="glyphicon glyphicon-paperclip"></span><span data-bind="text: numberOfAttachments"></span>
                                            </div>
                                            <div class="indicator-icon-with-value margin-right-10 view" data-bind="visible: numberOfNotes > 0">
                                                <span class="glyphicon glyphicon-comment"></span><span data-bind="text: numberOfNotes"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="editor margin-bottom-10" data-bind="css: { editing: lineEditing }">
                                        <button type="submit" class="btn btn-primary edit" data-bind="click: saveLineItemChanges, clickBubble: false">Save</button>
                                        <button class="btn btn-link edit" data-bind="click: cancelLineItemChanges, clickBubble: false">Cancel</button>
                                    </div>
                                </div>

                                <div class="col-md-3 margin-bottom-3 text-align-right no-right-padding no-print">
                                    <button id="btn-edit-line-item" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10 hidden-xs" data-bind="click: editLine, clickBubble: false, visible: !lineEditing() && !isLineItemCompleted() && !isLineItemNoAction()">Edit</button>
                                    <button id="btn-edit-line-item" type="button" class="col-xs-4 btn btn-default btn-sm margin-right-10 hidden-sm hidden-md hidden-lg" data-bind="click: editLine, clickBubble: false, visible: !lineEditing() && !isLineItemCompleted() && !isLineItemNoAction()">Edit</button>
                                </div>

                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                </section>

            </div>
            <div class="panel panel-default padding-top-10 no-print">
                <section class="margin-bottom-15">
                    <h3 class="col-md-12">Attachments
                        <span>
                            <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Attachments" data-toggle="collapse" data-target="#addAttachment"><span class="glyphicon glyphicon-plus"></span></button>
                        </span>
                    </h3>
                    <div id="addAttachment" class="collapse">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @using (Html.BeginForm("UploadAttachment", "ServiceCall"))
                                    {
                                        @Html.HiddenFor(x => Model.ServiceCallSummary.ServiceCallId, new { @Name = "ServiceCallId" })
                                        @Html.EditorFor(x => x.TempFiles)
                                        <input type="submit" class="btn btn-primary trigger-file-uploader" value="Add" />
                                        <button class="btn btn-link" data-toggle="collapse" data-target="#addAttachment">Cancel</button>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>
                    <br />
                    <em data-bind="visible: allAttachments().length < 1" class="padding-left-15 padding-top-7 pull-left">There are no attachments to display</em>
                    <div class="remove-list-style attachments row">
                        <div class="clearfix"></div>
                        <br />
                        <ul data-bind="foreach: allAttachments">
                            <li>
                                <a class="attached-file" data-bind="css: 'download-attachment', attr:{'href': '@Url.Action("DownloadAttachment", "ServiceCall")/' + serviceCallAttachmentId}">
                                    @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.CustomerCareManager))
                                    {
                                        <span data-url="" data-bind="attr: { 'data-attachment-id': serviceCallAttachmentId, 'data-url':'@Url.Action("DeleteAttachment", "ServiceCall")    '}, css: 'boxclose', click: $parent.removeAttachment.bind($parent)"></span>
                                    }
                                    <span class="download-attachment glyphicon glyphicon-file"></span>
                                </a>
                                <a href="#" data-bind="attr: { 'data-attachment-id': serviceCallAttachmentId}, editable: displayName, editableOptions: { pk: serviceCallAttachmentId, url: '@Url.Action("RenameAttachment", "ServiceCall")    '}"  class="attached-file-display-name"></a>
                                <br />
                                <p data-bind="text: createdBy + ' on ' + moment(createdDate).format('L'), css: 'attachment-info'"></p>
                            </li>
                        </ul>
                    </div>
                </section>

                <section class="margin-bottom-15">
                    <h3 class="col-md-12">Notes
                        <span>
                            <button type="button" class="btn btn-default pull-right has-bottom-tooltip no-print" title="Add Note" data-toggle="collapse" data-target="#addCallNote"><span class="glyphicon glyphicon-plus"></span></button>
                        </span>
                    </h3>
                    <div class="clearfix"></div>
                    <div id="addCallNote" class="collapse">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="control-group" data-bind="validationElement: noteDescriptionToAdd">
                                        @Html.TextArea("Description", null, new { id = "addCallNoteDescription", @class = "form-control", data_bind = "text: noteDescriptionToAdd, value: noteDescriptionToAdd, valueUpdate: 'afterkeydown', attr:{placeholder: 'Add note'}", @rows = 3 })
                                    </div>
                                </div>
                            </div>
                            <br/>
                            <div class="form-submit">
                                <button class="btn btn-primary" data-bind="click: addCallNote">Add</button>
                                <button class="btn btn-link" data-toggle="collapse" data-target="#addCallNote" data-bind="click: cancelCallNote">Cancel</button>
                            </div>
                        </div>
                    </div>
                    <p data-bind="visible: allCallNotes().length < 1" class="padding-left-15 margin-bottom-15"><em>There are no notes to display</em></p>
                    <div data-bind="foreach: allCallNotes">
                        <div id="allServiceCallNotes" class="service-call-line edit-line-item row line-detail">
                            <div class="col-md-9">
                                <div class="editor" data-bind="css: { editing: editingNote }">
                                    <div class="margin-bottom-5">
                                        <strong><small><span data-bind="text: createdBy"></span></small></strong>
                                        <small><span data-bind="text: moment(createdDate).format('L')"></span></small>
                                    </div>
                                    <div class="form-group" data-bind="validationElement: note">
                                        @Html.TextArea( "Description", null, new { id = "editCallNote", @class = "form-control edit", data_bind = "text: note, value: note, valueUpdate: 'afterkeydown'", @rows = 3 })
                                    </div>
                                    <p data-bind="text: note" class="view"></p>
                                </div>
                                <div class="editor margin-bottom-10" data-bind="css: { editing: editingNote }">
                                    <button type="submit" class="btn btn-primary edit" data-bind="click: saveNoteChanges, clickBubble: false">Save</button>
                                    <button class="btn btn-link edit" data-bind="click: cancelNoteChanges, clickBubble: false">Cancel</button>
                                </div>
                            </div>
                            <div class="col-md-3 margin-bottom-3 text-align-right no-right-padding no-print">
                                @if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.CustomerCareManager))
                                {
                                    <button id="btn-edit-call-note" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10 hidden-xs" data-bind="click: function() { editingNote(!editingNote()); }, visible: !editingNote()">Edit</button>
                                    <button id="btn-edit-call-note" type="button" class="col-xs-4 btn btn-default btn-sm margin-right-10 hidden-sm hidden-md hidden-lg" data-bind="click: function() { editingNote(!editingNote()); }, visible: !editingNote()">Edit</button>
                                    
                                    <button id="btn-delete-call-note" type="button" class="btn btn-default btn-sm btn-hover-show margin-right-10 hidden-xs" data-bind="click: deleteNote, visible: !editingNote()">Delete</button>
                                    <button id="btn-delete-call-note" type="button" class="col-xs-4 btn btn-default btn-sm margin-right-10 margin-bottom-10 hidden-sm hidden-md hidden-lg" data-bind="">Delete</button>
                                }
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            
            <div class="print-only">
                <br/>
                <label>Signature: __________________________________________ &ensp; Date: _________________</label>
            </div>
        </div>
    </div>
</div>
</div>
@if (User.IsInRole(UserRoles.WarrantyServiceCoordinator) || User.IsInRole(UserRoles.CustomerCareManager))
{
    @Format.ActionwithPopup("special_project", @Url.Action("ToggleSpecialProject", "ServiceCall"), Model.ServiceCallSummary.ServiceCallId)
    @Format.ActionwithPopup("escalate", @Url.Action("ToggleEscalate", "ServiceCall"), Model.ServiceCallSummary.ServiceCallId)
    <div id='reopen' class='popup-action-with-message'>
        <textarea class="form-control margin-bottom-10" rows="5" placeholder="Enter reason"></textarea>
        <a href='#' id='btn_execute_reopen' class='btn btn-primary' data-action-url='@Url.Action("Reopen", "ServiceCall")' data-service-call-id='@Model.ServiceCallSummary.ServiceCallId'>Submit</a>
        <a href='#' class='btn-link btn-cancel-popup'>Cancel</a>
    </div>
}

@section modules
{
    <script>
        define('modelData', function() {
            return {
                initialServiceLines: @Html.Raw(Model.ServiceCallLines.ToJson()),
                initialServiceNotes: @Html.Raw(Model.ServicCallNotes.ToJson()),
                initialAttachments: @Html.Raw(Model.Attachments.ToJson()),
                isSpecialProject: @Model.ServiceCallSummary.IsSpecialProject.ToJson(),
                specialProjectReason: @Html.Raw(Model.ServiceCallSummary.SpecialProjectReason.ToJson()),
                specialProjectDate: @Html.Raw(Model.ServiceCallSummary.SpecialProjectDate.ToJson()),
                isEscalated: @Model.ServiceCallSummary.IsEscalated.ToJson(),
                escalationReason: @Html.Raw(Model.ServiceCallSummary.EscalationReason.ToJson()),
                escalationDate: @Html.Raw(Model.ServiceCallSummary.EscalationDate.ToJson()),
                canBeReopened: @Model.ServiceCallSummary.CanBeReopened.ToJson(),
                attachmentRemovalMessage: '@WarrantyConstants.AttachmentRemovalMessage',
                saveAdditionalContactsUrl: '@Url.Action("SaveAdditionalContacts", "Homeowner")',
                jobId: @Html.Raw(Model.ServiceCallSummary.JobId.ToJson()),
                canUndoSpecialProject: @Model.ServiceCallSummary.CanUndoSpecialProject.ToJson(),
                payments: @Model.Payments,
                purchaseOrders: @Model.PurchaseOrders
            }
        });

        define('additionalContactsData', function() {
            return {
                additionalEmailContacts: @Html.Raw(Model.AdditionalContacts.AdditionalEmailContacts.ToJson()),
                additionalPhoneContacts: @Html.Raw(Model.AdditionalContacts.AdditionalPhoneContacts.ToJson()),
            };
        });

        define('dropdownData', function() {
            return {
                availableLookups: @Html.Raw(Model.AddServiceCallLineItem.ProblemCodes.Select(x => new { problemId = x.Value, problemCode = x.Text }).ToJson()),
                verificationTypes: @Html.Raw(@HomeownerVerificationType.GetAll().Where(x => x.Value != @HomeownerVerificationType.NotVerified.Value && x.Value != @HomeownerVerificationType.Imported.Value).OrderBy(x => x.DisplayName).Select(x => new {DisplayText = x.DisplayName, x.Value}).ToJson())
                }
        });
    </script>
    }
