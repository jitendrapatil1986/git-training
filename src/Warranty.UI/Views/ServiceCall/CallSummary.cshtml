@using Warranty.Core.Enumerations
@using Warranty.UI.Core.Helpers
@model Warranty.Core.Features.ServiceCallSummary.ServiceCallSummaryModel

@{
    ViewBag.Title = "Service Call Summary";
}

@helper ServiceCallStatusIconHelper(DateTime? completionDate, DateTime createdDate, int daysOpenedFor, int numberOfDaysRemaining, int percentComplete)
{
    if (completionDate == null)
    {
    <div class="has-bottom-tooltip" title="@Format.DateForServiceCallWiget(createdDate)">
        <span class="glyphicon glyphicon-time text-muted"></span> @Format.ServiceCallDaysLeft(numberOfDaysRemaining)<br />
        <div class="progress time-remaining-progress hidden-sm hidden-xs">
            <div class="progress-bar @Css.ServiceCallProgressBar(numberOfDaysRemaining)" role="progressbar" style="width: @percentComplete%">
                <span class="sr-only">@percentComplete% Complete</span>
            </div>
        </div>
    </div>
    }
    else
    {
    <div class="col-md-8 pull-right">
        @Format.DaysOpenedFor(daysOpenedFor, createdDate, completionDate)
    </div>
    }
}


@helper EscalationHelper(bool escalated, DateTime? escalationDate, string escalationReason)
{
    if (escalated)
    {
    <div class='label label-danger'>
        <span class='glyphicon glyphicon-fire'></span>
        @Format.DateMonthDayYear(escalationDate) - @escalationReason
    </div>
    }
}

<div class="container">
    
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading text-capitalize">
                <div class="row">
                    <div class="col-md-1">
                        <h3 class="panel-title">@Model.ServiceCallSummary.CallNumber</h3>
                        @Format.YearsWithinWarranty(Model.ServiceCallSummary.YearsWithinWarranty, Model.ServiceCallSummary.WarrantyStartDate)
                    </div>
                    <div class="col-md-5">
                            <h3 class="panel-title text-capitalize">@Model.ServiceCallSummary.HomeownerName</h3>
                        @Html.ActionLink(Model.ServiceCallSummary.Address, "JobSummary", "Job", new {id = Model.ServiceCallSummary.JobId}, null)
                    </div>
                    <div class="col-md-3">
                        @Format.PhoneNumber(Model.ServiceCallSummary.PhoneNumber)<br />
                        <a>@Format.Email(Model.ServiceCallSummary.EmailAddress)</a>
                    </div>
                    <div class="col-md-2">
                        @ServiceCallStatusIconHelper(Model.ServiceCallSummary.CompletionDate, Model.ServiceCallSummary.CreatedDate, Model.ServiceCallSummary.DaysOpenedFor, Model.ServiceCallSummary.NumberOfDaysRemaining, Model.ServiceCallSummary.PercentComplete)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 text-capitalize">
                        Employee: @Model.ServiceCallSummary.AssignedTo
                    </div>
                    <div class="col-md-3">
                        Job Number: @Model.ServiceCallSummary.JobNumber
                    </div>
                    <div class="col-md-3" id="approveCommands">
                        @if (Model.ServiceCallSummary.ServiceCallStatus == ServiceCallStatus.Requested)
                        {
                            <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" class="approve-button"><span class="glyphicon glyphicon-thumbs-up approve-todo"></span>&nbsp;Approve</a>
                            
                            <a href="#" data-service-call-id="@Model.ServiceCallSummary.ServiceCallId" class="deny-button"><span class="glyphicon glyphicon-thumbs-down deny-todo"></span>&nbsp;Deny</a>
                        }
                        else
                        {
                            <span>Status: @Format.ServiceCallStatus(Model.ServiceCallSummary.ServiceCallStatus) </span>
                        }
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-3">
                        Division: @Model.ServiceCallSummary.DivisionName
                    </div>
                    <div class="col-md-3">
                        Community: @Model.ServiceCallSummary.CommunityName
                    </div>
                    <div class="col-md-3">
                        Project: @Model.ServiceCallSummary.ProjectName
                    </div>
                    <div class="col-md-3">
                        Builder:
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        Sales:
                    </div>
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-11"></div>
                    <div class="col-md-1 pull-right">
                        @Format.SpecialProject(Model.ServiceCallSummary.IsSpecialProject)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-center">
                    <h4>
                        @EscalationHelper(Model.ServiceCallSummary.IsEscalated, Model.ServiceCallSummary.EscalationDate, Model.ServiceCallSummary.EscalationReason)
                    </h4>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" role="tablist">
            <li class="active"><a href="#all_service_lines" role="tab" data-toggle="tab">All <span class="label label-default">@Model.ServiceCallLines.Count()</span></a></li>
            <li><a href="#open_service_lines" role="tab" data-toggle="tab">Open <span class="label label-warning">@Model.ServiceCallLines.Count(x => !x.Completed)</span></a></li>
            <li><a href="#closed_service_lines" role="tab" data-toggle="tab">Closed <span class="label label-success">@Model.ServiceCallLines.Count(x => x.Completed)</span></a></li>
            <li class="pull-right">
                <span class="widget-header">Line Items</span>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="all_service_lines">
                @Html.Partial("_AllServiceLines", Model.ServiceCallLines, new ViewDataDictionary { { "lineStatus", "All" } })
            </div>
            <div class="tab-pane" id="open_service_lines">
                @Html.Partial("_AllServiceLines", Model.ServiceCallLines.Where(x => !x.Completed), new ViewDataDictionary { { "lineStatus", "Open" } })
            </div>
            <div class="tab-pane" id="closed_service_lines">
                @Html.Partial("_AllServiceLines", Model.ServiceCallLines.Where(x => x.Completed), new ViewDataDictionary { { "lineStatus", "Closed" } })
            </div>
        </div>
    </div>
</div>
